#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import asyncio
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def run_simple():
    """–ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑ –ø—Ä–æ–±–ª–µ–º —Å –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º"""
    print("üéµ –ó–ê–ü–£–°–ö–ê–ï–ú –®–ê–†–ú–ê–ù–ö–£!")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    
    api_id = os.getenv('API_ID', '')
    api_hash = os.getenv('API_HASH', '')
    bot_token = os.getenv('TGBOT_TOKEN', '')
    owner_id = os.getenv('TG_OWNER_ID', '0')
    owner_id_2 = os.getenv('TG_OWNER_ID_2', '0')
    
    print(f"   API_ID: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if api_id else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"   API_HASH: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if api_hash else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"   TGBOT_TOKEN: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if bot_token else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"   TG_OWNER_ID: {owner_id}")
    print(f"   TG_OWNER_ID_2: {owner_id_2}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    allowed_users = []
    try:
        if owner_id != "0":
            allowed_users.append(int(owner_id))
        if owner_id_2 != "0":
            allowed_users.append(int(owner_id_2))
    except ValueError:
        pass
    
    print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {allowed_users}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º
    dry_run = os.getenv('DRY_RUN', 'true').lower() == 'true'
    print(f"   DRY_RUN: {'‚úÖ –í–∫–ª—é—á–µ–Ω' if dry_run else '‚ùå –í—ã–∫–ª—é—á–µ–Ω'}")
    
    if not api_id or not api_hash:
        print("\n‚ùå API_ID –∏–ª–∏ API_HASH –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return
    
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
    from main import ImprovedTradingBot
    
    bot = ImprovedTradingBot()
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
        await bot.initialize()
        bot.setup_message_handlers()
        
        print("\n‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print("üéØ –ë–æ—Ç —Å–ª—É—à–∞–µ—Ç –∫–∞–Ω–∞–ª—ã:")
        for k, v in bot.channel_entities.items():
            print(f"   - {k}: {getattr(v, 'title', v.id)}")
        
        print(f"\nüí° –†–µ–∂–∏–º: {'DRY_RUN (—Å–∏–º—É–ª—è—Ü–∏—è)' if dry_run else '–†–ï–ê–õ–¨–ù–ê–Ø –¢–û–†–ì–û–í–õ–Ø'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        if bot_token and allowed_users:
            print("‚úÖ –ë–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ")
            print("   –ö–æ–º–∞–Ω–¥—ã: /start, /help, /history, /equity, /stats, /dryrun_on, /dryrun_off")
            print("   –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ –≤ Telegram –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
        else:
            print("‚ö†Ô∏è –ë–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ –∑–∞–ø—É—â–µ–Ω (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)")
        
        print("\nüéµ –®–ê–†–ú–ê–ù–ö–ê –ó–ê–ü–£–©–ï–ù–ê!")
        print("   –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C")
        print("   –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É –±–µ–∑ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
        await bot.client.run_until_disconnected()
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(run_simple())
